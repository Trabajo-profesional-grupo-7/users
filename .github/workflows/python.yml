on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Tests
    runs-on: ubuntu-latest
    env:
      PORT: ${{ secrets.PORT }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ATTRACTIONS_SERVICE: ${{ secrets.ATTRACTIONS_SERVICE }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EXTERNAL_SERVICES: ${{ secrets.EXTERNAL_SERVICES }}
      FIREBASE_CREDENTIALS_JSON: ${{ secrets.FIREBASE_CREDENTIALS_JSON }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_SERVICE: ${{ secrets.POSTGRES_SERVICE }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      RECOVERY_PWD_CODE_EXPIRE_MINUTES: ${{ secrets.RECOVERY_PWD_CODE_EXPIRE_MINUTES }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest-cov

      - name: Run tests
        run: pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          fail_ci_if_error: false
          files: ./coverage.xml,!./cache
          name: codecov-umbrella
